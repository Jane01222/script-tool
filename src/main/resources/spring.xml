<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	  http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context-4.2.xsd   
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
      http://www.springframework.org/schema/task
	  http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	  >
	  
	<!-- 读取配置文件 -->
	<context:property-placeholder location="classpath:db-config.properties" />
	
	<bean id="destinationDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${c3p0.user.destination}" />
		<property name="password" value="${c3p0.password.destination}" />
		<property name="driverClass" value="${c3p0.driverClass}" />
		<property name="jdbcUrl" value="${c3p0.jdbcUrl.destination}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default:3 -->
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<!--两次连接中间隔时间，单位毫秒。Default:1000 -->
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" />
		<!--连接关闭时默认将所有未提交的操作回滚。Default:false -->
		<property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<!-- 连接池中保留的最大连接数。Default:15 -->
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出 SQLException,如设为0则无限期等待。单位毫秒。Default:0 -->
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
	</bean>
	
	<bean id="originalDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${c3p0.user.original}" />
		<property name="password" value="${c3p0.password.original}" />
		<property name="driverClass" value="${c3p0.driverClass}" />
		<property name="jdbcUrl" value="${c3p0.jdbcUrl.original}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default:3 -->
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<!--两次连接中间隔时间，单位毫秒。Default:1000 -->
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" />
		<!--连接关闭时默认将所有未提交的操作回滚。Default:false -->
		<property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<!-- 连接池中保留的最大连接数。Default:15 -->
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出 SQLException,如设为0则无限期等待。单位毫秒。Default:0 -->
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
	</bean>
	
	<!-- 事务控制 -->
	<bean id="originalTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="originalDataSource" />
	</bean>
	<bean id="destinationTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="destinationDataSource" />
	</bean>
	
	<context:component-scan base-package="com.xuanwu.service.impl;com.xuanwu.dao.impl"/>
</beans>